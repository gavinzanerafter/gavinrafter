{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["pageQuery","TagTemplate","data","tag","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","className","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"2FAAA,8GAmEaA,EAAY,aAyBVC,UA/EsB,SAAC,GAAwB,IAAvBC,EAAuB,EAAvBA,KAC9BC,EADqD,EAAjBC,YACpCD,IACDE,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAK,iBAAmBL,EAAnB,IAA2BS,SAAU,CAAC,OAAD,8BAA0CT,KAC1F,iCACE,gCACE,4CAAkBA,IAEpB,yBAAKU,UAAS,gBACXJ,EAAMK,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,4BACE,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOV,IAE/B,+BAAQO,EAAKC,YAAYK,MACzB,uBAAGC,wBAAyB,CAACC,OAAQR,EAAKS","file":"component---src-templates-tag-tsx-783b622ce261e1d74bc5.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    tag: string\n  }\n}\n\nconst TagTemplate: React.FC<Props> = ({data, pageContext}) => {\n  const {tag} = pageContext\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title={`Posts tagged \"${tag}\"`} keywords={[`blog`, `gatsby`, `javascript`, `react`, tag]} />\n      <article>\n        <header>\n          <h1>Posts tagged {tag}</h1>\n        </header>\n        <div className={`page-content`}>\n          {posts.map(({node}) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                <h3>\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n              </div>\n            )\n          })}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    totalCount: number\n    edges: {\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {tags: {in: [$tag]}}}) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 2500)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagTemplate\n"],"sourceRoot":""}